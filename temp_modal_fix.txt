            <ScrollView showsVerticalScrollIndicator={false}>
              <View style={styles.viewAddressDetails}>
                <View style={styles.detailRow}>
                  <Text style={styles.detailLabel}>Street Address</Text>
                  <Text style={styles.detailValue}>{selectedAddress?.street}</Text>
                </View>

                <View style={styles.detailRow}>
                  <Text style={styles.detailLabel}>City</Text>
                  <Text style={styles.detailValue}>{selectedAddress?.city}</Text>
                </View>

                <View style={styles.detailRow}>
                  <Text style={styles.detailLabel}>State/Province</Text>
                  <Text style={styles.detailValue}>{selectedAddress?.state}</Text>
                </View>

                <View style={styles.detailRow}>
                  <Text style={styles.detailLabel}>Zip Code</Text>
                  <Text style={styles.detailValue}>{selectedAddress?.zipCode}</Text>
                </View>

                <View style={styles.detailRow}>
                  <Text style={styles.detailLabel}>Country</Text>
                  <Text style={styles.detailValue}>{selectedAddress?.country}</Text>
                </View>

                {selectedAddress?.latitude && selectedAddress?.longitude && (
                  <View style={styles.detailRow}>
                    <Text style={styles.detailLabel}>Coordinates</Text>
                    <Text style={styles.detailValue}>
                      {selectedAddress.latitude.toFixed(6)}, {selectedAddress.longitude.toFixed(6)}
                    </Text>
                  </View>
                )}
              </View>

              {selectedAddress?.latitude && selectedAddress?.longitude && (
                <TouchableOpacity
                  style={styles.viewMapButton}
                  onPress={() => {
                    setShowViewModal(false);
                    setShowMapModal(true);
                  }}
                >
                  <Ionicons name="map" size={20} color="#fff" />
                  <Text style={styles.viewMapButtonText}>View on Map</Text>
                </TouchableOpacity>
              )}

              {!selectedAddress?.isDefault && (
                <TouchableOpacity
                  style={styles.setDefaultButton}
                  onPress={() => handleSetDefault(selectedAddress?._id)}
                >
                  <Ionicons name="star" size={20} color="#FFA500" />
                  <Text style={styles.setDefaultButtonText}>Set as Default</Text>
                </TouchableOpacity>
              )}

              {selectedAddress?.isDefault && (
                <View style={styles.defaultIndicator}>
                  <Ionicons name="star" size={20} color="#FFA500" />
                  <Text style={styles.defaultIndicatorText}>This is your default address</Text>
                </View>
              )}

              <View style={styles.viewModalButtons}>
                <TouchableOpacity
                  style={styles.editButtonModal}
                  onPress={() => handleEditAddress(selectedAddress)}
                >
                  <Ionicons name="create-outline" size={20} color="#fff" />
                  <Text style={styles.editButtonText}>Edit</Text>
                </TouchableOpacity>

                <TouchableOpacity
                  style={styles.deleteButtonModal}
                  onPress={() => handleDeleteAddress(selectedAddress?._id)}
                >
                  <Ionicons name="trash-outline" size={20} color="#FF6B6B" />
                  <Text style={styles.deleteButtonText}>Delete</Text>
                </TouchableOpacity>
              </View>

              <TouchableOpacity
                style={styles.closeButton}
                onPress={() => {
                  setShowViewModal(false);
                  setSelectedAddress(null);
                }}
              >
                <Text style={styles.closeButtonText}>Close</Text>
              </TouchableOpacity>
            </ScrollView>